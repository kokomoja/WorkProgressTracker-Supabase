const API_BASE = (window.APP_CONFIG && window.APP_CONFIG.API_BASE) || "/api";

(function initAuth() {
  const role = localStorage.getItem("role");
  const username = localStorage.getItem("username");
  if (!role || !username) location.href = "login.html";
  if (role !== "admin") location.href = "user.html";
  document.getElementById("logout").addEventListener("click", () => {
    localStorage.clear();
    location.href = "login.html";
  });
})();

const tokenHeader = () => ({
  Authorization: `Bearer ${localStorage.getItem("token")}`,
});

async function loadUsers(q = "") {
  try {
    const res = await fetch(`${API_BASE}/users?q=${encodeURIComponent(q)}`, {
      headers: tokenHeader(),
    });
    const users = await res.json();

    const tbody = document.getElementById("userTbody");
    if (!tbody) return;

    tbody.innerHTML = "";

    (users || []).forEach((u) => {
      const tr = document.createElement("tr");
      tr.innerHTML = `
        <td>${u.username}</td>
        <td>
          <select data-username="${u.username}" class="roleSel">
            <option value="user" ${
              u.role === "user" ? "selected" : ""
            }>user</option>
            <option value="admin" ${
              u.role === "admin" ? "selected" : ""
            }>admin</option>
          </select>
        </td>
        <td class="row gap">
          <button class="btn xs ghost" data-act="saveRole">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</button>
          <button class="btn xs danger" data-act="resetPass">‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</button>
        </td>
      `;

      tr.querySelector('[data-act="saveRole"]').addEventListener(
        "click",
        async () => {
          const roleSel = tr.querySelector(".roleSel");
          const newRole = roleSel.value;
          const res = await fetch(
            `${API_BASE}/users/${encodeURIComponent(u.username)}/role`,
            {
              method: "PUT",
              headers: { "Content-Type": "application/json", ...tokenHeader() },
              body: JSON.stringify({ role: newRole }),
            }
          );
          if (res.ok) alert("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        }
      );

      tbody.appendChild(tr);
    });

    const timeEl = document.getElementById("userUpdateTime");
    if (timeEl) {
      timeEl.textContent = new Date().toLocaleString("th-TH");
    }
  } catch (err) {
    console.error("‚ùå loadUsers error:", err);
    alert("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  }
}

document.getElementById("sysForm")?.addEventListener("submit", async (e) => {
  e.preventDefault();
  const body = {
    secret: document.getElementById("cfgSecret").value,
    statuses: document
      .getElementById("cfgStatuses")
      .value.split(",")
      .map((s) => s.trim())
      .filter(Boolean),
  };
  try {
    await fetch(`${API_BASE}/admin/settings`, {
      method: "PUT",
      headers: { "Content-Type": "application/json", ...tokenHeader() },
      body: JSON.stringify(body),
    });
    alert("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
  } catch {
    alert("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  }
});

window.addEventListener("DOMContentLoaded", async () => {
  await loadUsers();
});

document
  .getElementById("registerForm")
  ?.addEventListener("submit", async (e) => {
    e.preventDefault();
    console.log("‚úÖ registerForm event triggered");
    const username = document.getElementById("regUsername").value.trim();
    const display_name = document.getElementById("regDisplay").value.trim();
    const password = document.getElementById("regPassword").value.trim();
    const role = document.getElementById("regRole").value;
    const secret = document.getElementById("regSecret").value.trim();

    if (!username || !password || !display_name || !secret)
      return alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á");

    try {
      const res = await fetch(`${API_BASE}/admin-setting/register`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          username,
          password,
          display_name,
          role,
          secret,
        }),
      });

      const data = await res.json();

      if (data.status === "success") {
        alert("‡πÄ‡∏û‡∏¥‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        e.target.reset();
        await loadUsers();
      } else {
        alert(" ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à : " + (data.message || ""));
      }
    } catch (err) {
      console.error("Register Error : ", err);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏¢‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô");
    }
  });

document.addEventListener("DOMContentLoaded", () => {
  const refreshBtn = document.getElementById("refreshUsers");
  if (refreshBtn) {
    refreshBtn.addEventListener("click", async () => {
      refreshBtn.disabled = true;
      refreshBtn.innerHTML = "‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...";
      try {
        await loadUsers();
        alert("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      } catch (err) {
        console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
        alert("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      } finally {
        refreshBtn.disabled = false;
        refreshBtn.innerHTML = "üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä";
      }
    });
  }
});

document.getElementById("forgotForm")?.addEventListener("submit", async (e) => {
  e.preventDefault();

  const username = document.getElementById("forgotUsername").value.trim();
  const newPassword = document.getElementById("forgotPassword").value.trim();

  if (!username || !newPassword) {
    alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö");
    return;
  }

  try {
    const res = await fetch(`${API_BASE}/admin-setting/reset-password`, {
      method: "PUT",
      headers: { "Content-Type": "application/json", ...tokenHeader() },
      body: JSON.stringify({ username, newPassword }),
    });

    const data = await res.json();

    if (data.status === "success") {
      alert("‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      e.target.reset();
    } else {
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ: " + (data.message || ""));
    }
  } catch (err) {
    console.error("‚ùå Reset password error:", err);
    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô");
  }
});
